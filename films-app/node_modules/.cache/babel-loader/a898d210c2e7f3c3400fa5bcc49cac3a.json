{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\films-app\\\\src\\\\Row.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer'; // `https://api.themoviedb.org/3${fetchUrl}`\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\"; // const img_error = \"http://artismedia.by/blog/wp-content/uploads/2018/05/in-blog2-1.png\"\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    height: '390',\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n      console.log(setTrailerUrl(''), trailerUrl);\n      console.log(movie);\n    } else {\n      movieTrailer(null, {\n        tmdbId: movie.id || movie.title\n      }).then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search); // console.log(setTrailerUrl(urlParams.get('v')));\n\n        console.log(\"ссылка на ютуб\", urlParams.get('v'));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name,\n        onError: e => {\n          e.target.src = 'https://st2.depositphotos.com/2673929/6455/i/600/depositphotos_64556341-stock-photo-404-symbol.jpg';\n          e.target.style = 'max-width:167px; object-fit: revert;';\n        }\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"k63ruaDr6ck94JTzLN3dN+sD/HM=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["E:/project/films-app/src/Row.jsx"],"names":["React","useState","useEffect","axios","YouTube","movieTrailer","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","console","log","tmdbId","id","then","url","urlParams","URLSearchParams","URL","search","catch","error","map","poster_path","backdrop_path","name","e","target","src","style"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\n// `https://api.themoviedb.org/3${fetchUrl}`\r\n\r\nconst base_url =\"https://image.tmdb.org/t/p/original/\";\r\n// const img_error = \"http://artismedia.by/blog/wp-content/uploads/2018/05/in-blog2-1.png\"\r\n\r\n\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect(() =>{\r\n\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width:\"100%\",\r\n        playerVars: {\r\n             autoplay:1,\r\n        }\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl){\r\n            setTrailerUrl('');\r\n            console.log( setTrailerUrl(''),trailerUrl )\r\n            console.log(movie)\r\n        }else{\r\n            movieTrailer( null, { tmdbId: movie.id || movie.title} )\r\n            .then((url) => {\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                // console.log(setTrailerUrl(urlParams.get('v')));\r\n                console.log(\"ссылка на ютуб\",urlParams.get('v'))\r\n                \r\n\r\n            }).catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2> {title} </h2>\r\n            <div className=\"row_posters\">\r\n                {movies.map(movie => (\r\n                    <img \r\n                        key={movie.id}\r\n                        onClick={() => handleClick(movie)}\r\n                        className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n                        alt={movie.name} \r\n                        onError={(e) => {\r\n                                e.target.src = 'https://st2.depositphotos.com/2673929/6455/i/600/depositphotos_64556341-stock-photo-404-symbol.jpg' \r\n                                e.target.style = 'max-width:167px; object-fit: revert;'\r\n                            }}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}